from math import sin,degrees

N = 10
R = 1. #vary R from 1 to 100

dl = 0.1
alphaDeg = degrees(dl/2.0/R)
alpha = dl/2.0/R
h = 2.0*R*sin(alpha)
branchAngle = 10.

Axiom:  C(1)

derivation length: N

production:

C(n): 
  produce S(n)[+(branchAngle)C(n+1)][-(branchAngle)C(n+1)]

interpretation:

S(n):
  produce _(0.01);(2)^(alphaDeg)F(h)^(alphaDeg)

endlsystem
###### INITIALISATION ######

__lpy_code_version__ = 1.1

__copyright__ = 'open-source GPL'
__description__ = '- change the number of sides of the polygon\n\n- compute the length of the polygone using production rules\n'
__institutes__ = 'INRIA - CIRAD Virtual Plants'
__authors__ = 'C. Godin, F. Boudon'
